Introduction
It
If
Information
In
Increases
Instead
System
Servers
Self
Scalable
Systems
Single
Same
Searching
Search
Structured
Simplicty
Storage
Superpeers
State
Structure
is
in
internet
increased
it
interconnected
issues
if
involves
information
includes
its
intermediate
indexing
individual
item
distributed
distinction
decentralised
down
design
determines
description
directly
data
desired
details
discarded
distribution
described
decentralized
do
difficult
collection
clients
connected
core
computer
can
create
comes
cost
churn
centralised
consistency
constructed
connection
central
complexity
creating
communicate
complex
critical
consumption
copies
criteria
continues
constraints
circulating
consuming
computing
caching
content
count
connect
controller
connections
choose
changes
of
only
other
opposite
organizing
overlay
on
others
one
owners
objects
object
or
organization
offers
out
optional
own
overhead
offline
often
peer
periphery
provide
private
periodically
ping
point
peers
placed
particular
pattern
pass
prone
performance
packet
performs
process
prevent
participating
possible
per
powerful
predefined
nodes
no
networks
network
neighbour
new
needs
name
node
not
number
nod
networking
necessarily
which
well
where
ways
with
without
will
wireless
whatever
way
they
to
the
talk
tolerant
that
top
tolerance
than
them
there
their
topology
type
typically
two
this
through
too
then
those
tables
table
tracked
time
act
as
and
are
at
available
an
another
additional
also
access
alive
allow
all
authority
addressing
any
arranged
advantage
able
availability
about
attributes
around
algorithm
achives
according
approach
allowing
ad
applications
adapt
servers
symmetric
server
shut
such
security
scalability
sure
searching
structure
small
structured
single
switch
same
setup
solutions
sending
search
stored
sought
size
storage
send
stopped
scale
sup
setting
store
set
stores
subset
slides
system
searches
superpeers
somewhat
Clients
Client
Coherence
Censorship
Centralised
Chain
Cache
Common
Central
Cons
Completely
Nodes
Not
NOT
located
large
leaves
location
low
level
levels
lookup
local
looking
limits
log
lookups
links
between
built
be
by
but
basic
business
being
back
before
based
valid
virtual
vulnerable
vs
for
functionality
fault
flexibility
failure
find
flat
flooding
file
found
files
from
forward
form
formal
fashion
free
Highly
Hierarchical
Hybrid
Hash
Fault
Fundamental
Find
Flat
Fuzzy
Flooding
Fast
Functionality
Difficult
Done
Decentralised
Difference
Determines
Data
Disadvantages
Does
Definition
Distributed
DHT
DHTs
usually
used
unreliable
using
unique
unstructured
until
up
uses
updated
unpredictable
What
An
Add
Anyone
Addressing
Address
All
Advantages
VPNs
VS
remote
requires
rebalance
root
require
retrieving
regards
receives
response
received
responded
results
resources
retrieve
requests
rest
reliable
relies
rely
roles
resilient
Overlay
Objects
Overlays
maintenance
make
more
many
match
minimal
mesh
manner
matching
matches
message
messages
makes
maintain
must
multiple
manage
establish
edge
extensible
efficiency
etc
each
equal
effective
easy
element
every
endlessly
even
environment
Gives
Google
Topologies
Two
This
The
TTL
Time
To
Table
Evaluating
Extensibility
Easy
Every
Manageability
Memory
Placement
Possible
Pros
Root
Redundancy
Routing
Just
join
joins
Better
Based
how
hierarchy
have
home
hub
having
however
high
hops
hash
hop
hoc
highly
URLs
Unstructured
keywords
Location
Live
Loosely
queries
query
quickly
guaranteed
go
guarantees
given
Keywword